b'/*\n2693: \xe6\x9c\x80\xe8\xbf\x9c\xe8\xb7\x9d\xe7\xa6\xbb\nhttp://bailian.openjudge.cn/practice/2693/\n\n\n\xe6\x8f\x8f\xe8\xbf\xb0\n\xe7\xbb\x99\xe5\xae\x9a\xe4\xb8\x80\xe7\xbb\x84\xe7\x82\xb9(x,y)\xef\xbc\x8c\xe6\xb1\x82\xe8\xb7\x9d\xe7\xa6\xbb\xe6\x9c\x80\xe8\xbf\x9c\xe7\x9a\x84\xe4\xb8\xa4\xe4\xb8\xaa\xe7\x82\xb9\xe4\xb9\x8b\xe9\x97\xb4\xe7\x9a\x84\xe8\xb7\x9d\xe7\xa6\xbb\xe3\x80\x82\n\xe8\xbe\x93\xe5\x85\xa5\n\xe7\xac\xac\xe4\xb8\x80\xe8\xa1\x8c\xe6\x98\xaf\xe7\x82\xb9\xe6\x95\xb0n\xef\xbc\x88n\xe5\xa4\xa7\xe4\xba\x8e\xe7\xad\x89\xe4\xba\x8e2\xef\xbc\x89\xe6\x8e\xa5\xe7\x9d\x80\xe6\xaf\x8f\xe4\xb8\x80\xe8\xa1\x8c\xe4\xbb\xa3\xe8\xa1\xa8\xe4\xb8\x80\xe4\xb8\xaa\xe7\x82\xb9\xef\xbc\x8c\xe7\x94\xb1\xe4\xb8\xa4\xe4\xb8\xaa\xe6\xb5\xae\xe7\x82\xb9\xe6\x95\xb0x y\xe7\xbb\x84\xe6\x88\x90\xe3\x80\x82\n\xe8\xbe\x93\xe5\x87\xba\n\xe8\xbe\x93\xe5\x87\xba\xe4\xb8\x80\xe8\xa1\x8c\xe6\x98\xaf\xe6\x9c\x80\xe8\xbf\x9c\xe4\xb8\xa4\xe7\x82\xb9\xe4\xb9\x8b\xe9\x97\xb4\xe7\x9a\x84\xe8\xb7\x9d\xe7\xa6\xbb\xe3\x80\x82\xe4\xbd\xbf\xe7\x94\xa8printf("%.4f\\n", dis)\xe8\xbe\x93\xe5\x87\xba\xe8\xb7\x9d\xe7\xa6\xbb\xe5\x80\xbc\xe5\xb9\xb6\xe7\xb2\xbe\xe7\xa1\xae\xe5\x88\xb0\xe5\xb0\x8f\xe6\x95\xb0\xe7\x82\xb9\xe5\x90\x8e4\xe4\xbd\x8d\xe3\x80\x82\n\xe6\xa0\xb7\xe4\xbe\x8b\xe8\xbe\x93\xe5\x85\xa5\n6\r\n34.0 23.0\r\n28.1 21.6\r\n14.7 17.1\r\n17.0 27.2\r\n34.7 67.1\r\n29.3 65.1\n\xe6\xa0\xb7\xe4\xbe\x8b\xe8\xbe\x93\xe5\x87\xba\n53.8516\n\xe6\x8f\x90\xe7\xa4\xba\n\xe6\xb3\xa8\xe6\x84\x8f\xe5\x9c\xa8\xe5\x86\x85\xe9\x83\xa8\xe8\xae\xa1\xe7\xae\x97\xe6\x97\xb6\xe6\x9c\x80\xe5\xa5\xbd\xe4\xbd\xbf\xe7\x94\xa8double\xe7\xb1\xbb\xe5\x9e\x8b\xef\xbc\x8c\xe4\xbd\x86\xe5\x9c\xa8\xe7\x94\xa8scanf\xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\xe6\x97\xb6\xe5\x8f\xaa\xe8\x83\xbd\xe7\x94\xa8float\xe7\xb1\xbb\xe5\x9e\x8b\xe7\x9a\x84\xe5\x8f\x98\xe9\x87\x8f\xe3\x80\x82\n\xe6\x9d\xa5\xe6\xba\x90\n\xe8\xae\xa1\xe7\xae\x97\xe6\xa6\x82\xe8\xae\xba05\n\n*/\n\n#include<iostream>\n#include<cmath>\nusing namespace std;\nstruct\n{\n\tdouble x;\n\tdouble y;\n}dot[1000];\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tcin>>dot[i].x>>dot[i].y;\n\t}\n\tdouble distance=0;\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(((dot[i].x-dot[j].x)*(dot[i].x-dot[j].x)+(dot[i].y-dot[j].y)*(dot[i].y-dot[j].y))>distance)\n\t\t\t\tdistance=(dot[i].x-dot[j].x)*(dot[i].x-dot[j].x)+(dot[i].y-dot[j].y)*(dot[i].y-dot[j].y);\n\t\t}\n\t}\n\tcout<<sqrt(distance);\n\treturn 0;\n}'
