b'/*\n2707: \xe6\xb1\x82\xe4\xb8\x80\xe5\x85\x83\xe4\xba\x8c\xe6\xac\xa1\xe6\x96\xb9\xe7\xa8\x8b\xe7\x9a\x84\xe6\xa0\xb9\nhttp://bailian.openjudge.cn/practice/2707/\n\n\n\xe6\x8f\x8f\xe8\xbf\xb0\n\xe5\x88\xa9\xe7\x94\xa8\xe5\x85\xac\xe5\xbc\x8fx1 = (-b + sqrt(b*b-4*a*c))/(2*a), x2 = (-b - sqrt(b*b-4*a*c))/(2*a)\xe6\xb1\x82\xe4\xb8\x80\xe5\x85\x83\xe4\xba\x8c\xe6\xac\xa1\xe6\x96\xb9\xe7\xa8\x8bax2 + bx + c =0\xe7\x9a\x84\xe6\xa0\xb9\xef\xbc\x8c\xe5\x85\xb6\xe4\xb8\xada\xe4\xb8\x8d\xe7\xad\x89\xe4\xba\x8e0\xe3\x80\x82\n\xe8\xbe\x93\xe5\x85\xa5\n\xe7\xac\xac\xe4\xb8\x80\xe8\xa1\x8c\xe6\x98\xaf\xe5\xbe\x85\xe8\xa7\xa3\xe6\x96\xb9\xe7\xa8\x8b\xe7\x9a\x84\xe6\x95\xb0\xe7\x9b\xaen\xe3\x80\x82 \xe5\x85\xb6\xe4\xbd\x99n\xe8\xa1\x8c\xe6\xaf\x8f\xe8\xa1\x8c\xe5\x90\xab\xe4\xb8\x89\xe4\xb8\xaa\xe6\xb5\xae\xe7\x82\xb9\xe6\x95\xb0a, b, c\xef\xbc\x88\xe5\xae\x83\xe4\xbb\xac\xe4\xb9\x8b\xe9\x97\xb4\xe7\x94\xa8\xe7\xa9\xba\xe6\xa0\xbc\xe9\x9a\x94\xe5\xbc\x80\xef\xbc\x89\xef\xbc\x8c\xe5\x88\x86\xe5\x88\xab\xe8\xa1\xa8\xe7\xa4\xba\xe6\x96\xb9\xe7\xa8\x8bax2 + bx + c =0\xe7\x9a\x84\xe7\xb3\xbb\xe6\x95\xb0\xe3\x80\x82\n\xe8\xbe\x93\xe5\x87\xba\n\xe8\xbe\x93\xe5\x87\xba\xe5\x85\xb1\xe6\x9c\x89n\xe8\xa1\x8c\xef\xbc\x8c\xe6\xaf\x8f\xe8\xa1\x8c\xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xaa\xe6\x96\xb9\xe7\xa8\x8b\xe7\x9a\x84\xe6\xa0\xb9\xef\xbc\x9a   \xe8\x8b\xa5\xe6\x98\xaf\xe4\xb8\xa4\xe4\xb8\xaa\xe5\xae\x9e\xe6\xa0\xb9\xef\xbc\x8c\xe5\x88\x99\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x9ax1=...;x2 = ...   \xe8\x8b\xa5\xe4\xb8\xa4\xe4\xb8\xaa\xe5\xae\x9e\xe6\xa0\xb9\xe7\x9b\xb8\xe7\xad\x89\xef\xbc\x8c\xe5\x88\x99\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x9ax1=x2=...   \xe8\x8b\xa5\xe6\x98\xaf\xe4\xb8\xa4\xe4\xb8\xaa\xe8\x99\x9a\xe6\xa0\xb9\xef\xbc\x8c\xe5\x88\x99\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x9ax1=\xe5\xae\x9e\xe9\x83\xa8+\xe8\x99\x9a\xe9\x83\xa8i; x2=\xe5\xae\x9e\xe9\x83\xa8-\xe8\x99\x9a\xe9\x83\xa8i\xe6\x89\x80\xe6\x9c\x89\xe5\xae\x9e\xe6\x95\xb0\xe9\x83\xa8\xe5\x88\x86\xe8\xa6\x81\xe6\xb1\x82\xe7\xb2\xbe\xe7\xa1\xae\xe5\x88\xb0\xe5\xb0\x8f\xe6\x95\xb0\xe7\x82\xb9\xe5\x90\x8e5\xe4\xbd\x8d\xef\xbc\x8c\xe6\x95\xb0\xe5\xad\x97\xe3\x80\x81\xe7\xac\xa6\xe5\x8f\xb7\xe4\xb9\x8b\xe9\x97\xb4\xe6\xb2\xa1\xe6\x9c\x89\xe7\xa9\xba\xe6\xa0\xbc\xe3\x80\x82x1\xe5\x92\x8cx2\xe7\x9a\x84\xe9\xa1\xba\xe5\xba\x8f\xef\xbc\x9ax1\xe7\x9a\x84\xe5\xae\x9e\xe9\x83\xa8>Re\xe7\x9a\x84\xe5\xae\x9e\xe9\x83\xa8||(x1\xe7\x9a\x84\xe5\xae\x9e\xe9\x83\xa8==x2\xe7\x9a\x84\xe5\xae\x9e\xe9\x83\xa8&&x1\xe7\x9a\x84\xe8\x99\x9a\xe9\x83\xa8>=x2\xe7\x9a\x84\xe8\x99\x9a\xe9\x83\xa8)\n\xe6\xa0\xb7\xe4\xbe\x8b\xe8\xbe\x93\xe5\x85\xa5\n3\r\n1.0 3.0 1.0\r\n2.0 -4.0 2.0\r\n1.0 2.0 8.0\r\n\n\xe6\xa0\xb7\xe4\xbe\x8b\xe8\xbe\x93\xe5\x87\xba\nx1=-0.38197;x2=-2.61803\r\nx1=x2=1.00000\r\nx1=-1.00000+2.64575i;x2=-1.00000-2.64575i\n\xe6\x8f\x90\xe7\xa4\xba\n1\xe3\x80\x81\xe9\x9c\x80\xe8\xa6\x81\xe4\xb8\xa5\xe6\xa0\xbc\xe6\x8c\x89\xe7\x85\xa7\xe9\xa2\x98\xe7\x9b\xae\xe6\x8f\x8f\xe8\xbf\xb0\xe7\x9a\x84\xe9\xa1\xba\xe5\xba\x8f\xe6\xb1\x82\xe8\xa7\xa3x1\xe3\x80\x81x2\xe3\x80\x822\xe3\x80\x81\xe6\x96\xb9\xe7\xa8\x8b\xe7\x9a\x84\xe6\xa0\xb9\xe4\xbb\xa5\xe5\x8f\x8a\xe5\x85\xb6\xe5\xae\x83\xe4\xb8\xad\xe9\x97\xb4\xe5\x8f\x98\xe9\x87\x8f\xe7\x94\xa8double\xe7\xb1\xbb\xe5\x9e\x8b\xe5\x8f\x98\xe9\x87\x8f\xe8\xa1\xa8\xe7\xa4\xba\xe3\x80\x823\xe3\x80\x81\xe5\x87\xbd\xe6\x95\xb0sqrt()\xe5\x9c\xa8\xe5\xa4\xb4\xe6\x96\x87\xe4\xbb\xb6math.h\xe4\xb8\xad\xe3\x80\x824\xe3\x80\x81\xe8\xa6\x81\xe8\xbe\x93\xe5\x87\xba\xe6\xb5\xae\xe7\x82\xb9\xe6\x95\xb0\xe3\x80\x81\xe5\x8f\x8c\xe7\xb2\xbe\xe5\xba\xa6\xe6\x95\xb0\xe5\xb0\x8f\xe6\x95\xb0\xe7\x82\xb9\xe5\x90\x8e5\xe4\xbd\x8d\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x94\xa8\xe4\xb8\x8b\xe9\x9d\xa2\xe8\xbf\x99\xe7\xa7\x8d\xe5\xbd\xa2\xe5\xbc\x8f\xef\xbc\x9a      printf("%.5f", num);\xe6\xb3\xa8\xe6\x84\x8f\xef\xbc\x8c\xe5\x9c\xa8\xe4\xbd\xbf\xe7\x94\xa8Java\xe5\x81\x9a\xe6\xad\xa4\xe9\xa2\x98\xe6\x97\xb6\xef\xbc\x8c\xe5\x8f\xaf\xe8\x83\xbd\xe4\xbc\x9a\xe5\x87\xba\xe7\x8e\xb0x1\xe6\x88\x96x2\xe7\xad\x89\xe4\xba\x8e-0\xe7\x9a\x84\xe6\x83\x85\xe5\xbd\xa2\xef\xbc\x8c\xe6\xad\xa4\xe6\x97\xb6\xef\xbc\x8c\xe9\x9c\x80\xe8\xa6\x81\xe6\x8a\x8a\xe8\xb4\x9f\xe5\x8f\xb7\xe5\x8e\xbb\xe6\x8e\x89\n\xe6\x9d\xa5\xe6\xba\x90\n2005~2006\xe5\x8c\xbb\xe5\xad\xa6\xe9\x83\xa8\xe8\xae\xa1\xe7\xae\x97\xe6\xa6\x82\xe8\xae\xba\xe6\x9c\x9f\xe6\x9c\xab\xe8\x80\x83\xe8\xaf\x95\n\n*/\n\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n\nusing namespace std;\n\nint main()\n{\ndouble a,b,c,i,n,delta;\ncin>>n;\nfor(i=1;i<=n;i++)\n{\ncin>>a>>b>>c;\ndelta=b*b-4*a*c;\ncout << fixed<<setprecision(5);\nif(fabs(delta) < 1e-8)\n{\ncout<<"x1=x2="<<-b/a/2<<endl;\n}\nelse if(delta>0)\n{\ncout<<"x1="<<(-b+sqrt(delta))/2/a<<";"<<"x2="<<(-b-sqrt(delta))/2/a<<endl; //x1=(-b+sqrt(delta))/(2*a) \xe8\xbe\x93\xe5\x87\xbax1;x2\n}\nelse if(delta<0)\n{\ndelta=0-delta; //\xe5\xb0\x86delta\xe5\x8f\x98\xe4\xb8\xba\xe7\x9b\xb8\xe5\x8f\x8d\xe6\x95\xb0\xef\xbc\x8c\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xbc\x80\xe6\x96\xb9\xe4\xba\x86\ndouble tmp = - b / a / 2;\nif (fabs(tmp) < 1e-8) tmp = 0.0;\ncout<<"x1="<<tmp<<"+"<<sqrt(delta)/2/a<<"i;x2="<<tmp<<-sqrt(delta)/2/a<<"i"<<endl;\n}\n}\nreturn 0;\n}'
