/*
3143: 验证“歌德巴赫猜想”
http://bailian.openjudge.cn/practice/3143/


描述
验证“歌德巴赫猜想”，即：任意一个大于等于6的偶数均可表示成两个素数之和。
输入
输入只有一个正整数x。(x<=2000)
输出
如果x不是“大于等于6的偶数”，则输出一行：Error!否则输出这个数的所有分解形式，形式为：x=y+z其中x为待验证的数，y和z满足y+z=x，而且y<=z，y和z均是素数。如果存在多组分解形式，则按照y的升序输出所有的分解，每行一个分解表达式。注意输出不要有多余的空格。
样例输入
输入样例1:
7
输入样例2:
10
输入样例3:
100

样例输出
输出样例1:
Error!
输出样例2:
10=3+7
10=5+5
输出样例3:
100=3+97
100=11+89
100=17+83
100=29+71
100=41+59
100=47+53

来源
计算概论2007, XieDi

*/

#include<iostream>
using namespace std;
int main()
{
	int n,i,j,k,m=0,a[100000];
	cin>>n;
	if((n<6)||(n%2!=0))
	{
		cout<<"Error!"<<endl;
	return 0;
	}
	for(i=0;i<=n;i++)
	{
		k=0;
		for(j=2;j<i;j++)
		{
		if(i%j!=0)
			k+=1;
		else
			break;
		}
		if(k==i-2)
		{
			a[m]=i;
		m+=1;
		}
	}
		for(i=0;i<m;i++)
	{
		for(j=0;j<m;j++)
		{
		if((n-a[i]==a[j])&&(a[i]<=a[j]))
		{cout<<n<<"="<<a[i]<<"+"<<a[j]<<endl;}
		}
	}
 return 0;
}
