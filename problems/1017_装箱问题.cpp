/*
1017: 装箱问题
http://bailian.openjudge.cn/practice/1017/


描述
一个工厂制造的产品形状都是长方体，它们的高度都是h，长和宽都相等，一共有六个型号，他们的长宽分别为1*1, 2*2, 3*3, 4*4, 5*5, 6*6。这些产品通常使用一个 6*6*h 的长方体包裹包装然后邮寄给客户。因为邮费很贵，所以工厂要想方设法的减小每个订单运送时的包裹数量。他们很需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。
输入
输入文件包括几行，每一行代表一个订单。每个订单里的一行包括六个整数，中间用空格隔开，分别为1*1至6*6这六种产品的数量。输入文件将以6个0组成的一行结尾。
输出
除了输入的最后一行6个0以外，输入文件里每一行对应着输出文件的一行，每一行输出一个整数代表对应的订单所需的最小包裹数。
样例输入
0 0 4 0 0 1 
7 5 1 0 0 0 
0 0 0 0 0 0 
样例输出
2 
1 
来源
Central Europe 1996

*/

#include<iostream>
using namespace std;
int main()
{
	int a1,a2,a3,a4,a5,a6;
	int number;
	int for2,for1;
	int remain[4]={0,5,3,1};
	while(cin>>a1>>a2>>a3>>a4>>a5>>a6)
	{
		for2=for1=0;
		if(a1==0&&a2==0&&a3==0&&a4==0&&a5==0&&a6==0)return 0;
			number=a6+a5+a4+(a3+3)/4;
			for2=5*a4+remain[a3%4];
			if(for2<a2)
				number+=(a2-for2+8)/9;
			for1=36*number-36*a6-25*a5-16*a4-9*a3-4*a2;
			if(for1<a1)
				number+=(a1-for1+35)/36;
			cout<<number<<endl;
	}
	return 0;
}
